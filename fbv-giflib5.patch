--- fbv-1.0b/gif.c.orig	2003-08-24 22:23:02.000000000 +0200
+++ fbv-1.0b/gif.c	2023-04-12 21:15:20.080578085 +0200
@@ -31,10 +31,10 @@
 #include <string.h>
 #define min(a,b) ((a) < (b) ? (a) : (b))
 #define gflush return(FH_ERROR_FILE);
-#define grflush { DGifCloseFile(gft); return(FH_ERROR_FORMAT); }
-#define mgrflush { free(lb); free(slb); DGifCloseFile(gft); return(FH_ERROR_FORMAT); }
+#define grflush { DGifCloseFile(gft, NULL); return(FH_ERROR_FORMAT); }
+#define mgrflush { free(lb); free(slb); DGifCloseFile(gft, NULL); return(FH_ERROR_FORMAT); }
 #define agflush return(FH_ERROR_FORMAT);
-#define agrflush { DGifCloseFile(gft); return(FH_ERROR_FORMAT); }
+#define agrflush { DGifCloseFile(gft, NULL); return(FH_ERROR_FORMAT); }
 
 
 int fh_gif_id(char *name)
@@ -81,7 +81,7 @@ int fh_gif_load(char *name,unsigned char
     ColorMapObject *cmap;
     int cmaps;
 
-    gft=DGifOpenFileName(name);
+    gft=DGifOpenFileName(name, NULL);
     if(gft==NULL){printf("err5\n"); gflush;} //////////
     do
     {
@@ -170,7 +170,7 @@ int fh_gif_load(char *name,unsigned char
 	}
     }
     while( rt!= TERMINATE_RECORD_TYPE );
-    DGifCloseFile(gft);
+    DGifCloseFile(gft, NULL);
     return(FH_ERROR_OK);
 }
 
@@ -184,7 +184,7 @@ int fh_gif_getsize(char *name,int *x,int
     int extcode;
     GifRecordType rt;
 
-    gft=DGifOpenFileName(name);
+    gft=DGifOpenFileName(name, NULL);
     if(gft==NULL) gflush;
     do
     {
@@ -197,7 +197,7 @@ int fh_gif_getsize(char *name,int *x,int
 		px=gft->Image.Width;
 		py=gft->Image.Height;
 		*x=px; *y=py;
-		DGifCloseFile(gft);
+		DGifCloseFile(gft, NULL);
 		return(FH_ERROR_OK);
 		break;
 	    case EXTENSION_RECORD_TYPE:
@@ -210,7 +210,7 @@ int fh_gif_getsize(char *name,int *x,int
 	}  
     }
     while( rt!= TERMINATE_RECORD_TYPE );
-    DGifCloseFile(gft);
+    DGifCloseFile(gft, NULL);
     return(FH_ERROR_FORMAT);
 }
 #endif
